// <auto-generated />
using System;
using Infrastructure.Iottu.Persistence.Contexts;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Oracle.EntityFrameworkCore.Metadata;

#nullable disable

namespace Infrastructure.Iottu.Persistence.Migrations
{
    [DbContext(typeof(IottuDbContext))]
    partial class IottuDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.9")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            OracleModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Core.Iottu.Domain.Entities.Antena", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("RAW(16)");

                    b.Property<string>("Identificador")
                        .IsRequired()
                        .HasColumnType("NVARCHAR2(2000)");

                    b.Property<string>("Localizacao")
                        .IsRequired()
                        .HasColumnType("NVARCHAR2(2000)");

                    b.Property<Guid?>("PatioId")
                        .HasColumnType("RAW(16)");

                    b.HasKey("Id");

                    b.HasIndex("PatioId");

                    b.ToTable("Antenas");
                });

            modelBuilder.Entity("Core.Iottu.Domain.Entities.Moto", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("RAW(16)");

                    b.Property<string>("Chassi")
                        .IsRequired()
                        .HasColumnType("NVARCHAR2(2000)");

                    b.Property<string>("Modelo")
                        .IsRequired()
                        .HasColumnType("NVARCHAR2(2000)");

                    b.Property<string>("NumeroMotor")
                        .IsRequired()
                        .HasColumnType("NVARCHAR2(2000)");

                    b.Property<Guid>("PatioId")
                        .HasColumnType("RAW(16)");

                    b.Property<string>("Placa")
                        .IsRequired()
                        .HasColumnType("NVARCHAR2(2000)");

                    b.Property<int>("StatusId")
                        .HasColumnType("NUMBER(10)");

                    b.Property<Guid>("TagId")
                        .HasColumnType("RAW(16)");

                    b.HasKey("Id");

                    b.HasIndex("PatioId");

                    b.HasIndex("StatusId");

                    b.HasIndex("TagId")
                        .IsUnique();

                    b.ToTable("Motos");
                });

            modelBuilder.Entity("Core.Iottu.Domain.Entities.Patio", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("RAW(16)");

                    b.Property<int>("Capacidade")
                        .HasColumnType("NUMBER(10)");

                    b.Property<string>("Cep")
                        .IsRequired()
                        .HasColumnType("NVARCHAR2(2000)");

                    b.Property<string>("Cidade")
                        .IsRequired()
                        .HasColumnType("NVARCHAR2(2000)");

                    b.Property<string>("Estado")
                        .IsRequired()
                        .HasColumnType("NVARCHAR2(2000)");

                    b.Property<string>("Numero")
                        .IsRequired()
                        .HasColumnType("NVARCHAR2(2000)");

                    b.HasKey("Id");

                    b.ToTable("Patios");
                });

            modelBuilder.Entity("Core.Iottu.Domain.Entities.StatusMoto", b =>
                {
                    b.Property<int>("Id")
                        .HasColumnType("NUMBER(10)");

                    b.Property<string>("Descricao")
                        .IsRequired()
                        .HasColumnType("NVARCHAR2(2000)");

                    b.HasKey("Id");

                    b.ToTable("Status");

                    b.HasData(
                        new
                        {
                            Id = 0,
                            Descricao = "INATIVA"
                        },
                        new
                        {
                            Id = 1,
                            Descricao = "ATIVA"
                        },
                        new
                        {
                            Id = 2,
                            Descricao = "EM MANUTENÇAO"
                        });
                });

            modelBuilder.Entity("Core.Iottu.Domain.Entities.Tag", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("RAW(16)");

                    b.Property<Guid>("AntenaId")
                        .HasColumnType("RAW(16)");

                    b.Property<string>("CodigoRFID")
                        .IsRequired()
                        .HasColumnType("NVARCHAR2(2000)");

                    b.Property<DateTime>("DataHora")
                        .HasColumnType("TIMESTAMP(7)");

                    b.Property<double>("Latitude")
                        .HasColumnType("BINARY_DOUBLE");

                    b.Property<double>("Longitude")
                        .HasColumnType("BINARY_DOUBLE");

                    b.Property<string>("SSIDWifi")
                        .IsRequired()
                        .HasColumnType("NVARCHAR2(2000)");

                    b.HasKey("Id");

                    b.HasIndex("AntenaId");

                    b.ToTable("Tags");
                });

            modelBuilder.Entity("Core.Iottu.Domain.Entities.Antena", b =>
                {
                    b.HasOne("Core.Iottu.Domain.Entities.Patio", "Patio")
                        .WithMany("Antenas")
                        .HasForeignKey("PatioId");

                    b.Navigation("Patio");
                });

            modelBuilder.Entity("Core.Iottu.Domain.Entities.Moto", b =>
                {
                    b.HasOne("Core.Iottu.Domain.Entities.Patio", "Patio")
                        .WithMany("Motos")
                        .HasForeignKey("PatioId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Core.Iottu.Domain.Entities.StatusMoto", "Status")
                        .WithMany("Motos")
                        .HasForeignKey("StatusId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Core.Iottu.Domain.Entities.Tag", "Tag")
                        .WithOne("Moto")
                        .HasForeignKey("Core.Iottu.Domain.Entities.Moto", "TagId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Patio");

                    b.Navigation("Status");

                    b.Navigation("Tag");
                });

            modelBuilder.Entity("Core.Iottu.Domain.Entities.Tag", b =>
                {
                    b.HasOne("Core.Iottu.Domain.Entities.Antena", "Antena")
                        .WithMany("Tags")
                        .HasForeignKey("AntenaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Antena");
                });

            modelBuilder.Entity("Core.Iottu.Domain.Entities.Antena", b =>
                {
                    b.Navigation("Tags");
                });

            modelBuilder.Entity("Core.Iottu.Domain.Entities.Patio", b =>
                {
                    b.Navigation("Antenas");

                    b.Navigation("Motos");
                });

            modelBuilder.Entity("Core.Iottu.Domain.Entities.StatusMoto", b =>
                {
                    b.Navigation("Motos");
                });

            modelBuilder.Entity("Core.Iottu.Domain.Entities.Tag", b =>
                {
                    b.Navigation("Moto");
                });
#pragma warning restore 612, 618
        }
    }
}
